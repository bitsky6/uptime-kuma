# syntax=docker/dockerfile:1

# First stage: build the main image
FROM node:23.10.0-slim

# Set the target platform (useful for cross-compiling)
ARG TARGETPLATFORM

# Use conditional commands based on the platform
RUN if [ "$TARGETPLATFORM" = "linux/arm64/v8" ]; then \
      echo "Building for ARMv7 and forcing native compile for node-oracledb"; \
    else \
      echo "Building for linux/amd64"; \
    fi

# Set the working directory
WORKDIR /app

# Install necessary packages & tools
RUN apt-get update \
    && apt-get --yes --no-install-recommends install \
        libaio1 \
        dumb-init \
        nano \
        net-tools \
        curl \
        dnsutils \
        iputils-ping \
        ca-certificates \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# Update dynamic linker configuration
RUN ldconfig

# Copy the application files
COPY . .

# For ARM: Force node-oracledb (and any other native modules) to build from source.
RUN if [ "$TARGETPLATFORM" = "linux/arm/v7" ]; then \
      npm config set build_from_source true; \
    fi

# Install Node.js dependencies and update minor versions using npm-check-updates
RUN npm install -g n && \
    npm install -g npm-check-updates && \
    ncu -u -t minor && \
    npm install

# Build app and prune dev dependencies
RUN npm run build && \
    npm prune

# Expose port and volume
EXPOSE 3001
VOLUME ["/app/data"]

# Set the entrypoint and default command
ENTRYPOINT ["dumb-init", "--"]
CMD ["node", "server/server.js"]
